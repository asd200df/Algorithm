4192. 수영대회 (완전 탐색)


[문제]
N*N 크기 (2 <= N <= 15)
갈 수 있는 길 : 0
갈 수 없는 길 : 1
가장 빠른 길로 갈 때
몇 초 만에 갈 수 있는지 계산 !


설계[1]
0 input 
1 make function
	BFS() init() 
2 .. 일단 하면서 BFS가 미숙해서 .. ㅎㅅㅎ


[input]
2  // test case
6  // map size
0 1 0 0 0 0  // map 
0 1 0 1 0 1
0 1 0 1 0 0
0 0 0 1 0 0
1 1 1 1 1 1
1 1 1 1 1 1
0 0  // start 좌표
3 5  // end 좌표
5
0 0 0 1 0
0 1 0 0 0
0 0 1 1 0
1 0 0 0 0
0 0 1 0 0
4 0
2 4


[output]
#1 14
#2 6







// 1. Flood Fill 기초

#include <iostream>
#include <queue>
using namespace std;

struct Node {
    int y, x;
    int lev;
};

int room[5][5];
int directY[4] = { -1, 1, 0, 0 };
int directX[4] = { 0, 0, -1, 1 };
int lastLev;
queue<Node> q;

int main()
{
    room[2][2] = 1;
    q.push({ 2, 2, 0 });

    while (!q.empty())
    {
        Node now = q.front();
        q.pop();

        for (int i = 0; i < 4; i++)
        {
            int ny = now.y + directY[i];
            int nx = now.x + directX[i];

            if (ny < 0 || nx < 0 || ny >= 5 || nx >= 5) continue;
            if (room[ny][nx] == 1) continue;
        
            room[ny][nx] = 1;
            q.push({ ny, nx, now.lev + 1 });

            lastLev = now.lev + 1;
       }
    }

    cout << lastLev;

    return 0;
}

