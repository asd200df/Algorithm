sol(2)

----------

# 1486
장훈이의 높은 선반

[문제]
직원들로 탑 쌓아서 선반 높이에 물건 꺼내기
탑을 쌓는 경우 중에서 가장 작은 탑의 높이 minimum을 구해서
minimum - B(선반 높이) 한 값 출력하기 
(직원이 한 명인 경우도 있음)

설계[1]
0 input
1 make func
	default >> init() input() solution()
	bespoke >> DFS()

[input]
1		test case
5 16		직원 수(1<=N<=20) / 선반 높이(B)
1 3 3 5 6	직원 키 1 / 2 / n...

[output]
#1 1


----------

# 2112
보호 필름

[문제]
두께 D, 가로 방향 W  >>  보호필름
A(0) 특성 or B(1) 특성
합격 기준 K (세로로 A 특성이든 B 특성이든 K개 이상씩 가로 끝까지 있어야 합격)
약품으로 가로 한 줄씩 A or B 특성으로 바꿀 수 있음
최소로 약품을 사용해서 성능 검사를 통과 할 수 있게 하고픔
약 투입하지 않고 통과하면 0 출력 아니면 최솟값 출력


설계[1]
0 input (vector, map ...)
1 make func
	default >> init(), input(), solve() ...
	bespoke >> DFS(), isValid(), Change(), BackTracking()...
2 solve()
	1. isValid check 하고 시작, 답이 0인 경우를 위해
	2. for limit ~  >>  DFS(limit)
	3. DFS() 에서 돌면서 바꿀 곳 저장해 놨다가 limit(종료지점)에 도착시
		Change() 로 map chage >> isValid check >> 종료 or 계속
		>> 계속해야 할 경우 BackTracking  시키고 return();
	... 


[input]
10		// test case    
6 8 3         		// D, W, K  (3≤D≤13), (1≤W≤20), -
0 0 1 0 1 0 0 1	// AABA ...
0 1 0 0 0 1 1 1
0 1 1 1 0 0 0 0
1 1 1 1 0 0 0 1
0 1 1 0 1 0 0 1
1 0 1 0 1 1 0 1
6 8 3         
1 1 1 1 0 0 1 0
0 0 1 1 0 1 0 1
1 1 1 1 0 0 1 0
1 1 1 0 0 1 1 0
1 1 0 1 1 1 1 0
1 1 1 0 0 1 1 0
...


[output]
#1 2
#2 0
...


----------

# 4193
수영대회 결승전

[문제]
map : N*N ( 2<=N<=15 )
주어지는 시작점과 도착점 
시작점에서 도착점까지 최소 경로로 갔을 때 >> 시간 구하기
but 장애물 : 1, 소용돌이 : 2(2초 유지 후 사라짐 - 0초 1초 2초에 사라지고 3초에 갈 수 있)


설계[1]
0 input >> queue, matrix, struct, dijkstra
1 make func
	default >> init() input() solve()
	bespoke >> BFS() vortex() 


[input]
3	// test case
5	// N * N
0 0 0 0 0	// map ...
0 0 0 1 0
0 0 0 1 0
2 2 1 1 0
0 0 0 0 0
4 0	// start y x
2 0	// end y x
6
0 0 0 0 0 0
0 1 1 0 0 0
0 0 0 1 2 0
1 1 0 1 0 1
0 0 0 1 0 1
0 0 0 2 0 1
5 0
2 5
6
0 0 0 0 0 0
0 0 0 0 0 0
1 0 1 1 1 0
1 0 0 0 0 0
1 0 1 1 1 0
0 0 2 0 2 0
5 0
3 5
...

[output]
#1 4
#2 10
#3 7







[규칙 찾기]
1 2 3 4 5 6 7 8 9 10 ...
%3
1 2 0 1 2 0 1 2 0 1 ...
3- 
if(0 ==  ) + 1
2 1  +



