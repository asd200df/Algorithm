# 직접 구현

bool binarySearch(int *arr, int len, int key) {
        int start = 0;
        int end = len - 1;
        int mid;

        while(end - start >= 0) {
                mid = (start + end) / 2; // 중앙 값

                if(arr[mid] == key) { // key 값을 찾았을 때
                        return true;
                }
                else if(arr[mid] > key) { // key 값이 mid의 값보다 작을때 (왼쪽으로)
                        end = mid - 1;
                }
                else { // key 값이 mid의 값보다 클 때(오른쪽으로)
                        start = mid + 1;
                }
        }
}





# 재귀 

bool binarySearch(int *arr, int start, int end, int key) {
        if(start > end) return false; // key 값이 없을 때
        int mid = (start+end) / 2;

        if(arr[mid] == key) { // key 값을 찾았을 때
                return true;
        } else if (arr[mid] > key) {
                return binary
        } else {
                return binarySearch(arr, mid + 1, end, key);
        }
}