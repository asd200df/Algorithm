// 뱀과 사다리 게임 (16928) Gold[5] 설계 



#1 (메모리 초과)
1) input() 
	// N(사다리), M(뱀) <= 15 
	// 10 x 10 == 100칸 map // map을 만들지 말고 used를 1차원으로 ..
	// vector 에 사다리 & 뱀 넣기
	// struct 모델 2개 있어야 될듯 vector 용 queue 용
2) solve()
	// used 에 사다리 있는 곳 표시 해 놔 도착지 숫자로
	// used 에 밟으면 안되는 뱀을 미리 -1로 처리 해 놔 
	// Call by BFS Function
3) BFS()
	// 갈 수 있는 길을 que 에 넣으면서 전진
	// 그 사이에 사다리 있으면 타고 
	// used && out of bound 는 continue 시키기
	// 도착했을 때 최솟값 return
4) Print 최솟값 !

생각해보니까 뒤로 가는게 없으면 굳이 used가 필요할까 


※ 시작칸이 이미 1번칸이야 그래서 만약 시작해서 주사위 3 던지면 3이 아니라 4인거지

※ 필요없을 것 같은 부분
	// 사다리 vec sort() >> 기준은 차이가 가장 큰 것 부터 순서대로 
	// 차이가 같을 때는 사다리 밑이 낮은 순서대로 



#2 (성공)
// 동일 템플릿 이용하는데 vector랑 struct 삭제
// 위 같은 거 보다 used 사용하니까 끝남 필요없는 거 
// queue 에 안 넣어주는 것이 가장 중요함 >> 메모리 초과 방지 




 