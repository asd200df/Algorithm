// 공유기 설치 (2110) Gold[4]




#0 문제 이해하기 
5 = 집, 3 = 공유기 갯수 
@ @  @       @ @
1 2 3 4 5 6 7 8 9
0    0       0
0    0         0
가장 인접한 두 공유기 사이를 최대한 멀게 하는 프로그램 맹글기 
출력은 가장 인접한 두 공유기 사이 거리 1 이랑 4 니까 3을 출력 !



#1 (구현 실패)
1) input()
	// N(집) <= 200,000 
	// C(공유기) <= N 
	// 0 <= 집 좌표 <= 1,000,000,000
2) solve()
	// 집 sort
	// left = 0, right = 집 중에 가장 큰 수(가장 먼 곳);
	for(int i < C){
		while() { 
			binary search
			// mid 값 중에 집 있는 곳 찍어서 넣고 used 처리
		}	
	}
	// 집끼리 중 가장 가까운 곳 maximum 에 갱신
3) print maximum !

※ 2sec




#2 
1) input()
2) solve()
	// call function
3) binary search() 로 거리를 측정함
	// 아 이전 설치 된 집 위치 알아야 돼 그래야 그 집이랑 비교 할 수 있어
	// 그 거리로 다 설치 할 수 있으면 갱신
	// 설치된 갯수가 많으면 설치수 줄이고 거리 늘리고
	// 설치된 갯수가 적으면 설치수 늘리고 거리 줄이고 
	// 결과 반환
4) 반환 값 출력


※ 위 처럼 하면 틀림 13% 정도에서 
 왜냐면 설치된 갯수가 딱 맞을 때는 거리 최대가 안되다가
 거리 최대가 됐는데 설치 가능한 곳은 더 많으면 ? 갱신이 안되잖아 그래서 
 저렇게 하면 틀림 반례를 봐봐

 4 3
 1 4 7 10

 이거 보면 최대 길이는 3인데 설치 가능한 공유기 수는 4니까 
 갱신이 안되는거야 
 
 즉, 설치된 갯수가 더 많으면이 아니고 설치 할 수 있는 곳이 더 많으면이야















