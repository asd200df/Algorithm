# lower_bound, upper_bound 의 활용




※ sort 가 되어 있는다는 전제하

# 1 lower_bound 
- 찾으려는 값이 배열 몇 번째에 처음 등장하는지
(array 사용 예시)
#include <iostream>
#include <algorithm>
using namespace std;

int main() { 

	int arr[6] = { 1,2,3,4,5,6 };
	cout << "lower_bound(6) : " << lower_bound(arr, arr + 6, 6) - arr;

    // 결과 -> lower_bound(6) : 5

	return 0;
}




# 2 upper_bound 
- 찾으려는 값을 초과하는 값이 배열 몇 번째에 처음 등장하는지
(vector사용)
#include <iostream>
#include <algorithm>
using namespace std;

int main() {

	vector<int> arr = { 1,2,3,4,5,6 };
	cout << "upper_bound(3) : " << upper_bound(arr.begin(), arr.end(), 3) - arr.begin();

    // 결과 -> upper_bound(3) : 3
	return 0;
}




# 3 lower & upper bound 사용해서 갯수 찾기
int main() {

	vector<int> arr = { 1,3,5,5,7,8,8,10,10,11,13 };
	cout << "5 이상 11 이하의 갯수 : " << upper_bound(arr.begin(), arr.end(), 11) - lower_bound(arr.begin(), arr.end(), 5);

	return 0;
}
 



